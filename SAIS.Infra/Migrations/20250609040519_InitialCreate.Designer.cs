// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAIS.Infra.DbContexts;

#nullable disable

namespace SAIS.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250609040519_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Applicant", b =>
                {
                    b.Property<int>("ApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantId"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("ApplicantId");

                    b.HasIndex("ApplicationDate");

                    b.HasIndex("GenderId");

                    b.HasIndex("IDNumber")
                        .IsUnique();

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("VillageId");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.ApplicationProgramme", b =>
                {
                    b.Property<int>("ApplicationProgrammeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationProgrammeId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationProgrammeId");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("ApplicantId", "ProgrammeId");

                    b.ToTable("ApplicationProgrammes");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.County", b =>
                {
                    b.Property<int>("CountyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountyId");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCountyId")
                        .HasColumnType("int");

                    b.HasKey("LocationId");

                    b.HasIndex("SubCountyId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.MaritalStatus", b =>
                {
                    b.Property<int>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaritalStatusId"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatuses");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Official", b =>
                {
                    b.Property<int>("OfficialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficialId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InformationCollectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfficialId");

                    b.HasIndex("ApplicantId")
                        .IsUnique();

                    b.ToTable("OfficialUses");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.PhoneNumber", b =>
                {
                    b.Property<int>("PhoneNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneNumberId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PhoneNumberId");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("Number");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Programme", b =>
                {
                    b.Property<int>("ProgrammeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgrammeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgrammeId");

                    b.ToTable("Programmes");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.SubCounty", b =>
                {
                    b.Property<int>("SubCountyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCountyId"));

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCountyId");

                    b.HasIndex("CountyId");

                    b.ToTable("SubCounties");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.SubLocation", b =>
                {
                    b.Property<int>("SubLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubLocationId"));

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubLocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("SubLocations");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Village", b =>
                {
                    b.Property<int>("VillageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VillageId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubLocationId")
                        .HasColumnType("int");

                    b.HasKey("VillageId");

                    b.HasIndex("SubLocationId");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Applicant", b =>
                {
                    b.HasOne("SAIS.Core.Domain.Entities.Gender", "Gender")
                        .WithMany("Applicants")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAIS.Core.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany("Applicants")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAIS.Core.Domain.Entities.Village", "Village")
                        .WithMany("Applicants")
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.ApplicationProgramme", b =>
                {
                    b.HasOne("SAIS.Core.Domain.Entities.Applicant", "Applicant")
                        .WithMany("ApplicationProgrammes")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAIS.Core.Domain.Entities.Programme", "Programme")
                        .WithMany("ApplicationProgrammes")
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("Programme");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Location", b =>
                {
                    b.HasOne("SAIS.Core.Domain.Entities.SubCounty", "SubCounty")
                        .WithMany("Locations")
                        .HasForeignKey("SubCountyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCounty");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Official", b =>
                {
                    b.HasOne("SAIS.Core.Domain.Entities.Applicant", "Applicant")
                        .WithOne("OfficialUse")
                        .HasForeignKey("SAIS.Core.Domain.Entities.Official", "ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.PhoneNumber", b =>
                {
                    b.HasOne("SAIS.Core.Domain.Entities.Applicant", "Applicant")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.SubCounty", b =>
                {
                    b.HasOne("SAIS.Core.Domain.Entities.County", "County")
                        .WithMany("SubCounties")
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("County");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.SubLocation", b =>
                {
                    b.HasOne("SAIS.Core.Domain.Entities.Location", "Location")
                        .WithMany("SubLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Village", b =>
                {
                    b.HasOne("SAIS.Core.Domain.Entities.SubLocation", "SubLocation")
                        .WithMany("Villages")
                        .HasForeignKey("SubLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubLocation");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Applicant", b =>
                {
                    b.Navigation("ApplicationProgrammes");

                    b.Navigation("OfficialUse");

                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.County", b =>
                {
                    b.Navigation("SubCounties");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Gender", b =>
                {
                    b.Navigation("Applicants");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Location", b =>
                {
                    b.Navigation("SubLocations");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.MaritalStatus", b =>
                {
                    b.Navigation("Applicants");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Programme", b =>
                {
                    b.Navigation("ApplicationProgrammes");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.SubCounty", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.SubLocation", b =>
                {
                    b.Navigation("Villages");
                });

            modelBuilder.Entity("SAIS.Core.Domain.Entities.Village", b =>
                {
                    b.Navigation("Applicants");
                });
#pragma warning restore 612, 618
        }
    }
}
